{"version":3,"sources":["components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/contacts-actions.js","service/contacts-api.js","redux/contacts-operation.js","redux/contacts-reducers.js","redux/store.js","components/Container/Container.jsx","components/Form/Form.jsx","redux/contacts-selectors.js","components/ListContacts/ListContacts.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.jsx","components/Form/Form.module.css"],"names":["module","exports","changeFilter","createAction","fetchContacts","a","axios","get","data","addContacts","contact","post","deleteContacts","id","delete","default","baseURL","fetchContactsAction","createAsyncThunk","contactApi","contacts","addContactsAction","deleteContactsAction","entities","createReducer","fulfilled","_state","action","payload","state","find","name","toLowerCase","alert","filter","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","Container","children","className","s","container","Form","dispatch","useDispatch","useState","setName","number","setNumber","nameId","uuidv4","telId","handleChange","e","target","value","form","onSubmit","preventDefault","contactsOperation","label","input","type","pattern","title","required","onChange","placeholder","button","getFilter","getVisibleContacts","createSelector","normalizeFilter","includes","ListContacts","useSelector","useEffect","list","map","item","onClick","onDeleteContacts","Filter","event","onBlur","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db3673e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ListContacts_button__3nIa3\",\"item\":\"ListContacts_item__3nG5N\",\"list\":\"ListContacts_list__3ZIq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__357RR\",\"label\":\"Filter_label__3zF77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1m7b1\",\"contacts\":\"App_contacts__pChCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21bx4\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\n\naxios.default.baseURL = 'http://localhost:3000';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`contacts`);\n  return data;\n}\n\nexport async function addContacts(contact) {\n  const { data } = await axios.post(`contacts`, contact);\n  return data;\n}\n\nexport async function deleteContacts(id) {\n  await axios.delete(`contacts/${id}`);\n  return id;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactApi from '../service/contacts-api';\n\nexport const fetchContactsAction = createAsyncThunk(\n  'contact/fetchContacts',\n  async () => {\n    const contacts = await contactApi.fetchContacts();\n    return contacts;\n  },\n);\n\nexport const addContactsAction = createAsyncThunk(\n  'contacts/addContacts',\n  async contact => {\n    const data = await contactApi.addContacts(contact);\n    return data;\n  },\n);\n\nexport const deleteContactsAction = createAsyncThunk(\n  'contacts/deleteContacts',\n  async id => {\n    await contactApi.deleteContacts(id);\n    return id;\n  },\n);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { changeFilter } from './contacts-actions';\nimport {\n  fetchContactsAction,\n  addContactsAction,\n  deleteContactsAction,\n} from './contacts-operation';\n\nconst entities = createReducer([], {\n  [fetchContactsAction.fulfilled]: (_state, action) => action.payload,\n  [addContactsAction.fulfilled]: (state, { payload }) => {\n    if (\n      state.find(\n        contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n      )\n    ) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n  [deleteContactsAction.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsAction.pending]: () => true,\n  [fetchContactsAction.fulfilled]: () => false,\n  [fetchContactsAction.rejected]: () => false,\n  [deleteContactsAction.fulfilled]: () => false,\n  [deleteContactsAction.pending]: () => true,\n  [deleteContactsAction.rejected]: () => false,\n  [addContactsAction.fulfilled]: () => false,\n  [addContactsAction.pending]: () => true,\n  [addContactsAction.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsAction.rejected]: (_state, action) => action.payload,\n  [fetchContactsAction.pending]: () => null,\n  [addContactsAction.pending]: () => null,\n  [addContactsAction.rejected]: (_state, action) => action.payload,\n  [deleteContactsAction.pending]: () => null,\n  [deleteContactsAction.rejected]: (_state, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({ entities, isLoading, error, filter });\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactReducer from './contacts-reducers';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport * as contactsOperation from '../../redux/contacts-operation';\nimport s from './Form.module.css';\n\nexport function Form() {\n  const onSubmit = (name, number) =>\n    dispatch(contactsOperation.addContactsAction({ name, number }));\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value = '' } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={nameId}\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Annie Copeland\"\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={telId}\n          onChange={handleChange}\n          value={number}\n          placeholder=\"227-91-26\"\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.entities;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  },\n);\n","import React, { useEffect } from 'react';\nimport * as contactsOperation from '../../redux/contacts-operation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport s from './ListContacts.module.css';\nimport PropTypes from 'prop-types';\n\nconst ListContacts = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContacts = id =>\n    dispatch(contactsOperation.deleteContactsAction(id));\n\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContactsAction());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          {name} : {number}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ListContacts;\n\nListContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContacts: PropTypes.func,\n};\n","import { changeFilter } from '../../redux/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeHandler = event => dispatch(changeFilter(event.target.value));\n  const onBlur = () => dispatch(changeFilter(''));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeHandler}\n        onBlur={onBlur}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n};\n","import Container from '../Container/Container';\r\nimport Form from '../Form/Form.jsx';\r\nimport ListContacts from '../ListContacts/ListContacts.jsx';\r\nimport Filter from '../Filter/Filter.jsx';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.contacts}>Contacts</h2>\r\n      <Filter />\r\n      <ListContacts />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__3icW4\",\"form\":\"Form_form__3Wcf_\",\"button\":\"Form_button__3-UzU\",\"label\":\"Form_label__2Lzf1\"};"],"sourceRoot":""}
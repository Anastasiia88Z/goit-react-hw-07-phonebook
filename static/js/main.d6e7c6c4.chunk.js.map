{"version":3,"sources":["components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/contacts-actions.js","redux/contacts-reducers.js","redux/store.js","components/Container/Container.jsx","components/Form/Form.jsx","redux/contacts-selectors.js","components/ListContacts/ListContacts.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.jsx","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","initialContacts","state","isNameExist","find","contact","name","toLowerCase","isNumberExist","number","isDoupleItem","alert","filter","_state","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","middleware","curryGetDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Container","children","className","s","container","Form","useState","setName","setNumber","dispatch","useDispatch","handleChange","e","target","value","form","onSubmit","preventDefault","label","input","type","pattern","title","required","onChange","placeholder","button","getFilter","getVisibleContacts","allContacts","getContacts","normalizeFilter","includes","ListContacts","useSelector","list","map","item","onClick","Filter","onBlur","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d6e7c6c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ListContacts_button__3nIa3\",\"item\":\"ListContacts_item__3nG5N\",\"list\":\"ListContacts_list__3ZIq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__357RR\",\"label\":\"Filter_label__3zF77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1m7b1\",\"contacts\":\"App_contacts__pChCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21bx4\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/addContact', data => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      ...data,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\nimport initialContacts from '../data/initialContacts.json';\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [addContact]: (state, { payload }) => {\r\n    const isNameExist = state.find(\r\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n    );\r\n\r\n    const isNumberExist = state.find(\r\n      contact => contact.number === payload.number,\r\n    );\r\n\r\n    const isDoupleItem = isNameExist || isNumberExist;\r\n    if (isDoupleItem) {\r\n      alert(`${isDoupleItem} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts-reducers';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: curryGetDefaultMiddleware =>\r\n    curryGetDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts-actions';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value = '' } = e.target;\r\n    name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addContact({ name, number }));\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n          placeholder=\"Annie Copeland\"\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n          placeholder=\"227-91-26\"\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts-actions';\r\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\r\nimport s from './ListContacts.module.css';\r\n\r\nfunction ListContacts() {\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ListContacts;\r\n","import { changeFilter } from '../../redux/contacts-actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  const onBlurHandler = () => {\r\n    dispatch(changeFilter(''));\r\n  };\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeHandler}\r\n        onBlur={onBlurHandler}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import Container from '../Container/Container';\r\nimport Form from '../Form/Form.jsx';\r\nimport ListContacts from '../ListContacts/ListContacts.jsx';\r\nimport Filter from '../Filter/Filter.jsx';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.contacts}>Contacts</h2>\r\n      <Filter />\r\n      <ListContacts />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport App from './components/App/App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__3icW4\",\"form\":\"Form_form__3Wcf_\",\"button\":\"Form_button__3-UzU\",\"label\":\"Form_label__2Lzf1\"};"],"sourceRoot":""}